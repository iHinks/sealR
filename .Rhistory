document()
getwd()
?documnet
?document
library(roxygen2)
document()
library(devtools)
document()
install_github("sealR", "mcgregorian1")
?install_github
install_github("mcgregorian1/sealR")
library(sealR)
?url_shp_to_spdf
document()
document()
devtools::install_github("melissanjohnson/pupR")
library(pupR)
?pupR
pupR()
pupR(10)
rep(pupR, 10)
rep(pupR(), 10)
?replicate
apply(seq(1:10), FUN=pupR)
apply(seq(1:10), FUN=pupR)
seq(1:10)
pupR()
pupR(100)
?pupR
apply(rep(1,10), pupR)
apply(rep(1,10), pupR())
apply(rep(1,10), FUN=pupR())
rep(1,10)
replicate(100, pupR())
document()
install_github("mcgregorian1/sealR")
library(sealR)
doggo(15)
?doggo
document()
install_github("mcgregorian1/sealR")
document()
install_github("mcgregorian1/sealR")
doggo(15)
remove.packages("pupR", lib="~/R/win-library/3.6")
doggo(2)
?install_github
library(sealR)
doggo(5)
?doggo
devtools::install_github("mcgregorian1/sealR")
library(sealR)
doggo(5)
document()
if(!require(pupR)){devtools::install_github("melissanjohnson/pupR"); library(pupR)}
library(sealR)
doggo(5)
library(sealR)
library(devtools)
document()
library(sealR)
library(sealR)
remove.packages("sealR", lib="~/R/win-library/3.6")
devtools::install_github("mcgregorian1/sealR")
library(sealR)
doggo(5)
?sample
library(devtools)
document()
library(sealR)
?url_shp_to_spdf
document()
library(SealR)
library(sealR)
?url_shp_to_spdf
document()
?url_shp_to_spdf
document()
document()
library(devtools)
library(roxygen2)
document()
?DownloadSentinel2L1C
document()
document()
?DownloadSentinel2L1C
fluxReshape <- Reduce(merge, list(greenup, midGreenup, maturity, peak, senescence, midGreendown, dormancy)) # View(fluxReshape)
setwd("D:/Git/flux/scripts")
library(data.table)
library(data.table)
dataDir <- "Z:/flux_analysis"
# read flux data
fluxData <- fread(file.path(dataDir, "crossing_dates_full.csv")) # View(fluxData)
greenup <- fluxData[var_simp == "GPP" & thresh == "5" & season == "spring", .(greenup = doy), by = c("site", "year")]
midGreenup <- fluxData[var_simp == "GPP" & thresh == "50" & season == "spring", .(midGreenup = doy), by = c("site", "year")]
maturity <- fluxData[var_simp == "GPP" & thresh == "85" & season == "spring", .(maturity = doy), by = c("site", "year")]
peak <- fluxData[var_simp == "GPP" & thresh == "100" & season == "spring", .(peak = doy), by = c("site", "year")]
senescence <- fluxData[var_simp == "GPP" & thresh == "85" & season == "fall", .(senescence = doy), by = c("site", "year")]
midGreendown <- fluxData[var_simp == "GPP" & thresh == "50" & season == "fall", .(midGreendown = doy), by = c("site", "year")]
dormancy <- fluxData[var_simp == "GPP" & thresh == "5" & season == "fall", .(dormancy = doy), by = c("site", "year")]
fluxReshape <- Reduce(merge, list(greenup, midGreenup, maturity, peak, senescence, midGreendown, dormancy)) # View(fluxReshape)
# read site metadata
fluxMeta <- fread(file.path(dataDir, "metadata_fluxnet2015", "sites_fluxnet2015.csv"))
fluxReshape$LC <- "unknow"
for (i in 1:nrow(fluxReshape)) {
fluxReshape$LC[i] <- as.character(fluxMeta[siteID == fluxReshape[i, "site"], "IGBP"][1])
}
# read modis data
modisData <- fread(file.path(dataDir, "modis_3_by_3_median_noTier.csv"))
# merge data
mergeData <- merge(fluxReshape, modisData, by.x = c("site", "year"), by.y = c("SiteID", "Year"), all = FALSE) # View(mergeData)
mergeData <- mergeData[complete.cases(mergeData)]
# for green up
greenupData <- mergeData[, .(flux_greenup = mean(.SD[, greenup], na.rm = TRUE),
modis_greenup = mean(.SD[, Greenup], na.rm = TRUE)),
by = c("year", "LC")]
LCTypes <- unique(greenupData$LC)
layout(matrix(1:length(LCTypes), nrow = 4))
for (i in 1:length(LCTypes)) {
x <- greenupData[LC == LCTypes[i]]$flux_greenup
y <- greenupData[LC == LCTypes[i]]$modis_greenup
plot(x, y, pch = 19, xlab = "Flux", ylab = "Modis", main = paste(LCTypes[i], "Green up"))
}
layout(matrix(1:12, nrow = 4))
for (i in 1:length(LCTypes)) {
x <- greenupData[LC == LCTypes[i]]$flux_greenup
y <- greenupData[LC == LCTypes[i]]$modis_greenup
plot(x, y, pch = 19, xlab = "Flux", ylab = "Modis", main = paste(LCTypes[i], "Green up"))
}
setwd("D:/Git/PlayAround")
library(data.table)
data <- fread("3_by_3_median_noTier.csv")
data[unlist(strsplit(SiteID, "_"))[2] == "1",]
f <- data[unlist(strsplit(SiteID, "_"))[2] == "1"]
f <- data[unlist(strsplit(SiteID, "_"))[2] == "1",]
f <- data[, .(new := unlist(strsplit(SiteID, "_"))[2]), ]
f <- data[, new := unlist(strsplit(SiteID, "_"))[2], ]
View(f)
View(data)
unlist(strsplit(s, "_"))[2]
s <- "AR-SLu_2"
unlist(strsplit(s, "_"))[2]
f <- data[, new := unlist(strsplit("SiteID", "_"))[2], ]
View(f)
f <- data[, new := unlist(strsplit(SiteID, "_"))[2], ]
View(f)
View(f)
f <- unlist(strsplit(data$SiteID, "_"))[2]
data$SiteID
f <- unlist(strsplit(data$SiteID, "_"))[2]
f <- unlist(strsplit(data$SiteID, "_"))
f <- as.character(unlist(strsplit(data$SiteID, "_"))[2])
strsplit(data$SiteID, "_")
f <- as.character(strsplit(data$SiteID, "_")[[2]])
f <- as.character(strsplit(data$SiteID, "_")[,2])
f <- strsplit(data$SiteID, "_")[,2]
l <- strsplit(data$SiteID, "_")
f <- l[, 2]
f <- l[[2]]
f <- as.data.frame(l)
f <- unlist(l)
f <- matrix( unlist(l), nrow = 6048)
View(f)
f <- matrix( unlist(l)[2], nrow = 6048)
View(f)
data$ID <- NA
for (i in 1:length(data)) {
data$ID[i] <- unlist(strsplit(data$SiteID[i], "_"))[2]
}
View(data)
data$ID <- NA
for (i in 1:nrow(data)) {
data$ID[i] <- unlist(strsplit(data$SiteID[i], "_"))[2]
}
View(data)
View(data)
r <- data[ID == 1,]
write.csv(r, "ddd.csv")
